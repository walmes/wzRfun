% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rp.nls.R
\name{rp.nls}
\alias{rp.nls}
\title{Interactive Fitting for Non Linear Regression Models}
\usage{
rp.nls(model, data, start, subset = NULL, xlab = NULL, ylab = NULL,
  ..., gpar = list(try = list(col = 2, lty = 2), fit = list(col = 2, lwd
  = 1.5)), extra = NULL)
}
\arguments{
\item{model}{a non linear model formula including variables and
parameters to passed to \code{\link[stats]{nls}()} function.}

\item{data}{a data frame with dependent and independent variables
present in the model formula.}

\item{start}{a named list with one item for each parameter. Each item
must vector with 2 (from, to) or 3 values (from, to, init) for
the \code{init}, \code{from} and \code{to}. When two values are
provided, the third is the average of them. Values are sorted
internally to match the initial, minimum and maximum to be used
by \code{\link[rpanel]{rp.slider}()}.}

\item{subset}{an optional string indicating a grouping variable to
fit separeted curves for each level. It must be a factor.}

\item{xlab}{labels for the x axis.}

\item{ylab}{labels for the y axis.}

\item{...}{arguments passed to the plot function used to draw the
\code{lines} function to draw the curve at the start values. The
most used arguments are \code{lty}, \code{col} and \code{lwd}.}

\item{gpar}{a named list with graphical parameters for curve. The
\code{"try"} element is a list for the eye curve that is
manipulated with sliders. The \code{"fit"} is a list for the
fitted curve.}

\item{extra}{a function of the model parameters that draw auxiliary
graphical elements. For example, draw vertical and horizontal
lines as references for model intercept and/or model asymptote.}
}
\value{
In fact none is returned by the function. There isn't a
    \code{return}, instead there is a \code{invisible} at the end. On
    the other hand, the model fit is assigned to the object with name
    passed to the \code{assign} argument.
}
\description{
This function opens a interface, builted with
    \pkg{rpanel} elements, designed for non linear regression models
    fitting. Sliders allows the user control values used as start
    values in the \code{\link[stats]{nls}()} call, checkbox allows
    select strata of the data to fit separed curves and more options
    are available.

\if{html}{\figure{rp-nls.png}{options: width="671px"}}
\if{latex}{\figure{rp-nls.pdf}{options: width=5.4in}}
}
\examples{

\donttest{

#--------------------------------------------
# A simple linear regression.

# The model below is a linear model. You should fit in lm().

library(rpanel)

cars.fit <- rp.nls(model = dist ~ b0 + b1 * speed, data = cars,
                   start = list(b0 = c(-20, 20),
                                b1 = c(0, 2, 10)),
                   xlab = "Speed", ylab = "Distance")

summary(cars.fit)
confint(cars.fit)

f <- formula(cars.fit)

plot(dist ~ speed, data = cars)
with(as.list(coef(cars.fit)), {
    eval(call("curve", f[[3]], add = TRUE,
              xname = intersect(all.vars(f[-2]), names(cars))))
})

#--------------------------------------------
# A non linear regression.

data(turk0, package = "alr3")
str(turk0)

plot(Gain ~ A, data = turk0,
     xlab = "Metionine", ylab = "Weight gain")

turk.fit <- rp.nls(model = Gain ~ Int + (Asy - Int) * A/(Half + A),
                   data = turk0,
                   start = list(Int = c(600, 650),
                                Asy = c(750, 850),
                                Half = c(0, 0.2)),
                   extra = function(Int, Asy, Half) {
                       abline(h = c(Asy, Int), v = Half,
                              col = "green")
                   },
                   xlab = "Metionine", ylab = "Weight gain")

summary(turk.fit)
confint(turk.fit)

f <- formula(turk.fit)

plot(Gain ~ A, data = turk0,
     xlab = "Metionine", ylab = "Weight gain")
with(as.list(coef(turk.fit)), {
    eval(call("curve", f[[3]], add = TRUE,
              xname = intersect(all.vars(f[-2]), names(turk0))))
})

#--------------------------------------------
# A more interesting example.

library(lattice)

xyplot(rate ~ conc, groups = state, data = Puromycin,
       type = c("p", "smooth"), auto.key = TRUE)

Puro.fit <- rp.nls(model = rate ~
                       Int + (Top - Int) * conc/(Half + conc),
                   data = Puromycin,
                   start = list(Int = c(20, 70),
                                Top = c(100, 200),
                                Half = c(0, 0.6)),
                   subset = "state",
                   gpar = list(try = list(col = 2, lty = 2),
                               fit = list(col = "blue", lwd = 1.5)),
#                  extra = function(Int, Top, Half) {
#                      abline(h = c(Int, Top), v = Half,
#                             col = 2, lty = 2)
#                  },
                   xlab = "Concentration", ylab = "Rate",
                   xlim = c(0, 1.2), ylim = c(40, 220))

length(Puro.fit)
sapply(Puro.fit, coef)
sapply(Puro.fit, logLik)
sapply(Puro.fit, deviance)

}
}
\seealso{
\code{\link[stats]{nls}()}, \code{\link[graphics]{lines}()},
    \code{\link[rpanel]{rp.slider}()}
}
\author{
Walmes Zeviani, \email{walmes@ufpr.br}.
}
\keyword{GUI}
